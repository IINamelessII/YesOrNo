{"version":3,"sources":["services/YonApiService.ts","contexts/userdata.context.tsx","contexts/profile-update.context.tsx","components/Header/Logo/index.ts","components/Header/Logo/Logo.tsx","components/hoc/withCentered/index.ts","components/hoc/withCentered/withCentered.tsx","utilities/arrayFunctions.ts","utilities/classNames.ts","components/Button/index.ts","components/Button/Button.tsx","components/LoginForm/LoginFormField/index.ts","components/LoginForm/LoginFormField/LoginFormField.tsx","components/LoginForm/LoginFormRegisterPrompt/index.ts","components/LoginForm/LoginFormRegisterPrompt/LoginFormRegisterPrompt.tsx","components/LoginForm/LoginForm.tsx","components/LoginForm/index.ts","components/Header/index.ts","components/Header/Header.tsx","components/Spinner/index.ts","components/Spinner/Spinner.tsx","components/Flows/index.ts","components/Flows/Flows.tsx","components/SideMenu/index.ts","components/SideMenu/SideMenu.tsx","components/hoc/withSpinner.tsx","components/AppBody/PollsView/Poll/VoteBar/index.ts","components/AppBody/PollsView/Poll/VoteBar/VoteBar.tsx","components/AppBody/PollsView/Poll/LikeSection/index.ts","components/AppBody/PollsView/Poll/LikeSection/LikeSection.tsx","components/AppBody/PollsView/Poll/Poll.tsx","components/AppBody/PollsView/Poll/index.ts","components/AppBody/PollsView/index.ts","components/AppBody/PollsView/PollsView.tsx","components/AppBody/AppBodyHeader/index.ts","components/AppBody/AppBodyHeader/AppBodyHeader.tsx","components/AppBody/GreetingPage/index.ts","components/AppBody/GreetingPage/GreetingPage.tsx","components/AppBody/index.ts","components/AppBody/AppBody.tsx","components/App/App.tsx","components/App/index.ts","index.tsx"],"names":["fetchUrl","Symbol","sendData","YonApiService","URL","API_URL","this","_callee","url","settings","response","regenerator_default","a","wrap","_context","prev","next","axios","get","sent","test","status","toString","Error","concat","data","abrupt","stop","_callee2","_context2","post","auth","username","password","_this","register","email","resetPassword","getFlows","getAllPolls","getPollsByFlow","flow","getPollsByUser","getUserdata","UserdataContext","React","createContext","is_auth","ProfileUpdateContext","Logo","react_default","createElement","className","withCentered","Wrapped","triggerButtonGenerator","_React$Component","_temp","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","isShown","onToggleShow","e","setState","_ref","onClickOnBg","target","_ref2","inherits","createClass","key","value","_this$props","props","centered","wrappedProps","objectWithoutProperties","wrapped","assign","withContainer","onClick","Fragment","Component","AH","insertElement","arr","idx","el","toConsumableArray","slice","replaceElement","modifyElement","action","undefined","deleteElement","classNames","names","reduce","res","val","keys","Button","_ref$label","label","flat","secondary","small","large","_ref$className","buttonProps","button--flat","button--secondary","button--small","button--large","LoginFormField","memo","name","type","_ref$error","error","onChange","otherProps","form-field--not-empty","form-field--error","autoComplete","prevProps","nextProps","LoginFormRegisterPrompt","_ref$messages","slicedToArray","messages","first","second","_ref3","_ref2$messages","lfirst","lsecond","_ref3$messages","nfirst","nsecond","getInitialState","login","registering","canSubmit","LoginForm","yonApi","onInputChange","prevState","_objectSpread2","objectSpread","defineProperty","inputValid","stateObj","toggleRegistration","onSubmit","preventDefault","profileUpdate","_this$state","nameOfProcedure","usernameInput","LoginForm_LoginFormField","passwordInput","emailInput","django_react_csrftoken_default","components_Button","LoginForm_LoginFormRegisterPrompt","Header","Header_Logo","Consumer","components_LoginForm","Spinner","_ref$mimicClass","mimicClass","Flows","yonAPI","flows","_this2","then","selectedFlow","handleSelectFlow","loggedIn","components_Spinner","flowShow","map","id","console","log","SideMenu","flowsProps","components_Flows","withSpinner","loading","VoteBar","onVoteYes","onVote","onVoteNo","agreed","disagreed","voted","votedAgree","votedDisagree","data-voted","data-agreed","data-disagreed","style","--agree-width","LikeSection","liked","rated","onRate","ratedLike","data-liked","data-pressed","Poll","vote","poll","rate","statement","Poll_VoteBar","agree","disagree","Poll_LikeSection","likes","disliked","dislikes","PollsView","polls","userdata","useContext","votedIDs","ratedIDs","pollElements","isVoted","includes","isRated","voteRateData","PollsView_Poll","AppBodyHeader","GreetingPage","onAuthMessage","addButton","margin","display","padding","namelessTG","href","yugisuTG","AppBody_AppBodyHeader","AppBody","pollsLoading","onPollsUpdated","updatePolls","contentView","AppBody_PollsView","AppBody_GreetingPage","pollId","counter","flowId","App","updateProfile","flowName","Provider","components_Header","components_SideMenu","components_AppBody","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.bda5a8fc.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\r\nimport { Flow, Poll, User } from '../types';\r\nconst fetchUrl = Symbol();\r\nconst sendData = Symbol();\r\n\r\nexport default class YonApiService {\r\n  URL = '';\r\n  API_URL = `${this.URL}/api`;\r\n\r\n  [fetchUrl] = async (\r\n    url: string,\r\n    settings?: AxiosRequestConfig\r\n  ): Promise<any> => {\r\n    const response = await axios.get(url, settings);\r\n\r\n    if (!/2[0-9]{2}/.test(response.status.toString())) {\r\n      throw new Error(`Fetching '${url}' failed, received ${response.status}`);\r\n    }\r\n\r\n    return await response.data;\r\n  };\r\n\r\n  [sendData] = async (\r\n    url: string,\r\n    data: {},\r\n    settings?: AxiosRequestConfig\r\n  ): Promise<any> => await axios.post(url, data, settings);\r\n\r\n  auth = (username: string, password: string) =>\r\n    this[sendData](`${this.URL}/signin/`, { username, password });\r\n\r\n  register = (email: string, username: string, password: string) =>\r\n    this[sendData](`${this.API_URL}/signup/`, { email, username, password });\r\n\r\n  resetPassword = (email: string) =>\r\n    this[sendData](`${this.API_URL}/resetpassword/`, { email });\r\n\r\n  sendData = (\r\n    url: string,\r\n    data: {},\r\n    settings?: AxiosRequestConfig\r\n  ): Promise<any> => this[sendData](`${this.URL}/${url}`, data, settings);\r\n\r\n  /**\r\n   * Returns a response Promise containing array of Flow objects\r\n   */\r\n  getFlows = (settings?: AxiosRequestConfig): Promise<Flow[]> =>\r\n    this[fetchUrl](`${this.API_URL}/flows`, settings);\r\n\r\n  /**\r\n   * Returns a response Promise containing array of all Poll objects\r\n   */\r\n  getAllPolls = (settings?: AxiosRequestConfig): Promise<Poll[]> =>\r\n    this[fetchUrl](`${this.API_URL}/polls`, settings);\r\n\r\n  /**\r\n   * Returns a response Promise containing array of Poll objects specified by given flow\r\n   * @param flow flow name\r\n   */\r\n  getPollsByFlow = (\r\n    flow: string,\r\n    settings?: AxiosRequestConfig\r\n  ): Promise<Poll[]> =>\r\n    this[fetchUrl](`${this.API_URL}/polls_by_flow/${flow}`, settings);\r\n\r\n  /**\r\n   * Returns a response Promise containing array of Poll objects added by given username\r\n   * @param username user's name\r\n   */\r\n  getPollsByUser = (\r\n    username: string,\r\n    settings?: AxiosRequestConfig\r\n  ): Promise<Poll[]> =>\r\n    this[fetchUrl](`${this.API_URL}/polls_by_user/${username}`, settings);\r\n\r\n  getUserdata = (): Promise<User> => this[fetchUrl](`${this.API_URL}/profile/`);\r\n}\r\n","import React from 'react';\r\nimport { User } from '../types';\r\n\r\nexport const UserdataContext = React.createContext({ is_auth: false } as User);\r\n","import React from 'react';\r\n\r\nexport const ProfileUpdateContext = React.createContext(() => {});\r\n","import Logo from './Logo';\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <div className=\"logo__icon\" />\r\n      <span className=\"logo__splash\">yes-or-no</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import withCentered from './withCentered';\r\n\r\nexport default withCentered;\r\n","import React from 'react';\r\n\r\nimport './withCentered.scss';\r\n\r\ntype Props = {\r\n  centered: boolean;\r\n};\r\n\r\ntype State = {\r\n  isShown: boolean;\r\n};\r\n\r\ntype TriggerButtonGenerator = (\r\n  onToggleShow: (\r\n    e: React.MouseEvent<HTMLElement> | React.FocusEvent<HTMLElement>\r\n  ) => void,\r\n  isShown: boolean\r\n) => React.ReactElement<any, any>;\r\n\r\n/**\r\n * Aims to make components able to be triggered by element generated\r\n * by \"triggerButtonGenerator\" function\r\n *\r\n * @param Wrapped React element to be centered\r\n * @param triggerButtonGenerator function which takes two\r\n * arguments: \"toggleShow\" function and property \"isShown\"\r\n */\r\nconst withCentered = <P extends object>(Wrapped: React.ComponentType<P>) => (\r\n  triggerButtonGenerator: TriggerButtonGenerator\r\n) =>\r\n  class extends React.Component<P & Props, State> {\r\n    state = {\r\n      isShown: true,\r\n    };\r\n\r\n    onToggleShow = (e: any) => {\r\n      this.setState(({ isShown }) => ({ isShown: !isShown }));\r\n    };\r\n\r\n    onClickOnBg = (e: React.MouseEvent<HTMLElement>) => {\r\n      const target = e.target as HTMLElement;\r\n\r\n      if (target.className === 'center-container') {\r\n        this.setState(({ isShown }) => ({ isShown: !isShown }));\r\n      }\r\n    };\r\n\r\n    render() {\r\n      const { centered, ...wrappedProps } = this.props;\r\n      const { isShown } = this.state as State;\r\n\r\n      const wrapped = (\r\n        <Wrapped {...wrappedProps as P} onToggleShow={this.onToggleShow} />\r\n      );\r\n      const withContainer = (\r\n        <div className=\"center-container\" onClick={this.onClickOnBg}>\r\n          {wrapped}\r\n        </div>\r\n      );\r\n\r\n      return (\r\n        <React.Fragment>\r\n          {triggerButtonGenerator(this.onToggleShow, isShown)}\r\n          {isShown && (centered ? withContainer : wrapped)}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default withCentered;\r\n","export default class AH {\r\n  static insertElement = <T extends string | object | number>(\r\n    arr: T[],\r\n    idx: number,\r\n    el: T\r\n  ) => [...arr.slice(0, idx), el, ...arr.slice(idx)];\r\n\r\n  static replaceElement = <T extends string | object | number>(\r\n    arr: T[],\r\n    idx: number,\r\n    el: T\r\n  ) => [...arr.slice(0, idx), el, ...arr.slice(idx + 1)];\r\n\r\n  static modifyElement = <T extends string | object | number>(\r\n    arr: T[],\r\n    idx: number,\r\n    action = (el: T) => el\r\n  ) => [...arr.slice(0, idx), action(arr[idx]), ...arr.slice(idx + 1)];\r\n\r\n  static deleteElement = <T extends string | object | number>(\r\n    arr: T[],\r\n    idx: number\r\n  ) => [...arr.slice(0, idx), ...arr.slice(idx + 1)];\r\n}\r\n","export const classNames = (...names: any[]) => {\r\n  return names.reduce((res, val, idx) => {\r\n    const className =\r\n      typeof val === 'string'\r\n        ? val\r\n        : typeof val === 'object'\r\n        ? val[Object.keys(val)[0]]\r\n          ? Object.keys(val)[0]\r\n          : ''\r\n        : '';\r\n    return res + (idx === 0 || !className ? className : ' ' + className);\r\n  }, '');\r\n};\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport { classNames } from '../../utilities';\r\n\r\nimport './Button.scss';\r\n\r\ntype Props = {\r\n  label: string;\r\n  flat?: boolean;\r\n  secondary?: boolean;\r\n  small?: boolean;\r\n  large?: boolean;\r\n};\r\n\r\nconst Button = ({\r\n  label = 'Button',\r\n  flat,\r\n  secondary,\r\n  small,\r\n  large,\r\n  className = '',\r\n  ...buttonProps\r\n}: React.HTMLProps<HTMLButtonElement> & Props) => {\r\n  return (\r\n    <button\r\n      className={classNames(\r\n        'button',\r\n        { 'button--flat': flat },\r\n        { 'button--secondary': secondary },\r\n        { 'button--small': small },\r\n        { 'button--large': large },\r\n        className\r\n      )}\r\n      {...buttonProps}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import LoginFormField from './LoginFormField';\r\n\r\nexport default LoginFormField;\r\n","import React from 'react';\r\n\r\nimport { classNames } from '../../../utilities';\r\n\r\nimport './LoginFormField.scss';\r\n\r\ntype Props = {\r\n  label: string;\r\n  value: string;\r\n  name: string;\r\n  type: 'password' | 'text';\r\n  error?: boolean;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst LoginFormField = ({\r\n  label,\r\n  value,\r\n  name,\r\n  type,\r\n  error = false,\r\n  onChange,\r\n  ...otherProps\r\n}: React.HTMLProps<HTMLInputElement> & Props) => {\r\n  return (\r\n    <label\r\n      className={classNames(\r\n        'form-field',\r\n        {\r\n          'form-field--not-empty': !!value,\r\n        },\r\n        {\r\n          'form-field--error': error,\r\n        }\r\n      )}\r\n    >\r\n      <span className=\"form-field__label\">{label}</span>\r\n      <input\r\n        className=\"form-field__input\"\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        autoComplete=\"off\"\r\n        {...otherProps}\r\n      />\r\n      {error && (\r\n        <div className=\"form-field__error-message\">Invalid {name}!</div>\r\n      )}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  LoginFormField,\r\n  (prevProps: Props, nextProps: Props) => prevProps.value === nextProps.value\r\n);\r\n","import LoginFormRegisterPrompt from './LoginFormRegisterPrompt';\r\n\r\nexport default LoginFormRegisterPrompt;\r\n","import React from 'react';\r\n\r\nimport './LoginFormRegisterPrompt.scss';\r\n\r\ntype Props = {\r\n  messages: Array<string>;\r\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\r\n};\r\n\r\nconst LoginFormRegisterPrompt = ({\r\n  messages: [first, second],\r\n  onClick,\r\n}: Props) => {\r\n  return (\r\n    <span className=\"register-prompt\">\r\n      <span>{first}</span>\r\n      <span className=\"register-prompt__action\" onClick={onClick}>\r\n        {second}\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  LoginFormRegisterPrompt,\r\n  ({ messages: [lfirst, lsecond] }, { messages: [nfirst, nsecond] }) =>\r\n    lfirst === nfirst || lsecond === nsecond\r\n);\r\n","import React from 'react';\r\nimport DjangoReactCSRFToken from 'django-react-csrftoken';\r\n\r\nimport withCentered from '../hoc/withCentered';\r\nimport { YonApiService } from '../../services';\r\n\r\nimport Button from '../Button';\r\nimport LoginFormField from './LoginFormField';\r\nimport LoginFormRegisterPrompt from './LoginFormRegisterPrompt';\r\n\r\nimport './LoginForm.scss';\r\n\r\n// TODO: PASSWORD SHOULD BE ENCODED\r\n\r\ntype InputEvent = React.ChangeEvent<HTMLInputElement>;\r\n\r\ntype Props = {\r\n  login?: string;\r\n  password?: string;\r\n  email?: string;\r\n  children?: never;\r\n  onToggleShow?: Function;\r\n  profileUpdate?: () => void;\r\n};\r\n\r\ntype State = {\r\n  login: string;\r\n  password: string;\r\n  email: string;\r\n  registering: boolean;\r\n  canSubmit: boolean;\r\n};\r\n\r\nconst getInitialState = (props: Props): State => ({\r\n  login: props.login || '',\r\n  password: props.password || '',\r\n  email: props.email || '',\r\n  registering: !!props.email || false,\r\n  canSubmit: false,\r\n});\r\n\r\nclass LoginForm extends React.Component<Props, State> {\r\n  yonApi = new YonApiService();\r\n\r\n  state: State = getInitialState(this.props);\r\n\r\n  onInputChange = (e: InputEvent): void => {\r\n    const target = e.target as HTMLInputElement;\r\n    const { name, value } = target;\r\n\r\n    this.setState(\r\n      (prevState): State => ({\r\n        ...prevState,\r\n        [name]: value,\r\n        canSubmit: this.inputValid(prevState),\r\n      })\r\n    );\r\n  };\r\n\r\n  inputValid = (stateObj: State = this.state): boolean => {\r\n    const { login, password, email, registering } = stateObj;\r\n\r\n    return !!login && !!password && (!registering || !!email);\r\n  };\r\n\r\n  toggleRegistration = () => {\r\n    this.setState(({ registering }) => ({ registering: !registering }));\r\n  };\r\n\r\n  onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const { login, password, email, canSubmit, registering } = this\r\n      .state as State;\r\n\r\n    const { profileUpdate } = this.props;\r\n\r\n    if (canSubmit) {\r\n      if (registering) {\r\n        this.yonApi.register(email, login, password);\r\n      } else {\r\n        this.yonApi.auth(login, password);\r\n      }\r\n\r\n      this.setState(getInitialState({}), () => {\r\n        profileUpdate && profileUpdate();\r\n      });\r\n\r\n      // this.props.onToggleShow && this.props.onToggleShow();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { login, password, email, registering } = this.state;\r\n\r\n    const nameOfProcedure = registering ? 'Sign up' : 'Sign in';\r\n\r\n    // #region Input Elements\r\n    const usernameInput = (\r\n      <LoginFormField\r\n        type=\"text\"\r\n        name=\"login\"\r\n        label=\"Username\"\r\n        value={login}\r\n        onChange={this.onInputChange}\r\n      />\r\n    );\r\n\r\n    const passwordInput = (\r\n      <LoginFormField\r\n        type=\"password\"\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        value={password}\r\n        onChange={this.onInputChange}\r\n      />\r\n    );\r\n\r\n    const emailInput = (\r\n      <LoginFormField\r\n        type=\"text\"\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        value={email}\r\n        onChange={this.onInputChange}\r\n      />\r\n    );\r\n    // #endregion\r\n\r\n    return (\r\n      <form className=\"login-form\" onSubmit={this.onSubmit}>\r\n        <DjangoReactCSRFToken />\r\n\r\n        <h2 className=\"login-form__splash\">{nameOfProcedure}</h2>\r\n        <div className=\"login-form__fields\">\r\n          {registering && emailInput}\r\n          {usernameInput}\r\n          {passwordInput}\r\n        </div>\r\n        <Button label={nameOfProcedure} />\r\n        <LoginFormRegisterPrompt\r\n          messages={\r\n            registering\r\n              ? ['Already have an account?', 'Sign in then!']\r\n              : [\"Don't have an account yet?\", 'Create a new one!']\r\n          }\r\n          onClick={this.toggleRegistration}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCentered(LoginForm)((onToggleShow, isShown) => (\r\n  <Button label=\"Sign in\" onClick={onToggleShow} flat={isShown} />\r\n));\r\n","import LoginForm from './LoginForm';\r\nimport LoginFormField from './LoginFormField';\r\n\r\nexport default LoginForm;\r\nexport { LoginFormField };\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport Logo from './Logo';\r\nimport LoginForm from '../LoginForm';\r\n\r\nimport './Header.scss';\r\nimport { ProfileUpdateContext } from '../../contexts';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <Logo />\r\n      <ProfileUpdateContext.Consumer>\r\n        {(value) => <LoginForm profileUpdate={value} centered />}\r\n      </ProfileUpdateContext.Consumer>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport './Spinner.scss';\r\n\r\ntype Props = {\r\n  mimicClass?: string;\r\n};\r\n\r\nconst Spinner = ({ mimicClass = '' }: Props) => {\r\n  return <div className={`loader ${mimicClass}`} />;\r\n};\r\n\r\nexport default Spinner;\r\n","import Flows from './Flows';\r\n\r\nexport default Flows;\r\n","import React, { useState } from 'react';\r\nimport { YonApiService } from '../../services';\r\n\r\nimport { Flow as FlowType } from '../../types';\r\nimport Spinner from '../Spinner';\r\nimport Button from '../Button';\r\n\r\nimport './Flows.scss';\r\n\r\ntype Props = {\r\n  selectedFlow: string | null;\r\n  loggedIn?: boolean;\r\n  handleSelectFlow: (flowName: string) => void;\r\n};\r\n\r\ntype State = {\r\n  flows: FlowType[] | null;\r\n};\r\n\r\nclass Flows extends React.Component<Props, State> {\r\n  yonAPI = new YonApiService();\r\n\r\n  state: State = {\r\n    flows: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.yonAPI.getFlows().then((flows) => this.setState({ flows }));\r\n  }\r\n\r\n  render() {\r\n    const { selectedFlow, handleSelectFlow, loggedIn = false } = this.props;\r\n    const { flows } = this.state;\r\n\r\n    if (flows === null) {\r\n      return <Spinner mimicClass=\"flows\" />;\r\n    }\r\n\r\n    const empty = flows.length === 0;\r\n\r\n    const flowShow = empty ? (\r\n      <div className=\"flow\">Whoops! Empty!</div>\r\n    ) : (\r\n      flows.map((flow) => (\r\n        <Button\r\n          className=\"flow\"\r\n          key={`flow-${flow.id}`}\r\n          label={flow.name}\r\n          secondary={flow.name === selectedFlow}\r\n          onClick={() => handleSelectFlow(flow.name)}\r\n        />\r\n      ))\r\n    );\r\n\r\n    return (\r\n      <div className=\"flows\">\r\n        <div className=\"flows__splash\">Choose a flow</div>\r\n        <Button\r\n          className=\"flow\"\r\n          label=\"+\"\r\n          onClick={() => console.log('puff!')}\r\n          flat\r\n        />\r\n        {flowShow}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Flows;\r\n\r\n// export default React.memo(\r\n//   Flows,\r\n//   ({ selectedFlow, loggedIn }, props) =>\r\n//     selectedFlow === props.selectedFlow || loggedIn === props.loggedIn\r\n// );\r\n","import SideMenu from './SideMenu';\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\n\r\nimport Flows from '../Flows';\r\n\r\nimport './SideMenu.scss';\r\n\r\ntype Props = {\r\n  flowsProps: {\r\n    selectedFlow: string | null;\r\n    handleSelectFlow: (flowName: string) => void;\r\n  };\r\n  loggedIn: boolean;\r\n};\r\n\r\nclass SideMenu extends React.Component<Props, {}> {\r\n  render() {\r\n    const { flowsProps } = this.props;\r\n\r\n    return (\r\n      <nav className=\"sidemenu\">\r\n        <Flows {...flowsProps} />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\n\r\nimport Spinner from '../Spinner';\r\n\r\ntype Props = {\r\n  loading: boolean;\r\n};\r\n\r\nconst withSpinner = <P extends object>(Component: React.ComponentType<P>) => {\r\n  return ({ loading, ...props }: P & Props) =>\r\n    loading ? <Spinner /> : <Component {...props as P} />;\r\n};\r\n\r\nexport default withSpinner;\r\n","import VoteBar from './VoteBar';\r\n\r\nexport default VoteBar;\r\n","import React, { CSSProperties } from 'react';\r\n\r\nimport { Votable } from '../../../../../types';\r\n\r\nimport './VoteBar.scss';\r\n\r\n// TODO: IMPLEMENT VOTE!\r\n\r\ntype Props = {\r\n  agreed: number;\r\n  disagreed: number;\r\n  is_auth: boolean;\r\n  voted?: Votable;\r\n  onVote: (vote: Votable) => void;\r\n};\r\n\r\nclass VoteBar extends React.Component<Props, {}> {\r\n  shouldComponentUpdate({ agreed, disagreed, voted }: Props) {\r\n    return (\r\n      voted !== this.props.voted ||\r\n      agreed !== this.props.agreed ||\r\n      disagreed !== this.props.disagreed\r\n    );\r\n  }\r\n\r\n  onVoteYes = () => {\r\n    this.props.onVote('+');\r\n  };\r\n\r\n  onVoteNo = () => {\r\n    this.props.onVote('-');\r\n  };\r\n\r\n  render() {\r\n    const { agreed, disagreed, voted, is_auth } = this.props;\r\n\r\n    const votedAgree = voted === '+';\r\n    const votedDisagree = voted === '-';\r\n\r\n    return (\r\n      <div className=\"votebar\">\r\n        {is_auth && (\r\n          <div\r\n            className=\"votebar__btn votebar__btn--agree\"\r\n            onClick={this.onVoteYes}\r\n            data-voted={votedAgree}\r\n          />\r\n        )}\r\n        <div\r\n          className=\"votebar__bar\"\r\n          data-agreed={agreed}\r\n          data-disagreed={disagreed}\r\n          data-voted={voted}\r\n          style={\r\n            { '--agree-width': agreed / (agreed + disagreed) } as CSSProperties\r\n          }\r\n        />\r\n        {is_auth && (\r\n          <div\r\n            className=\"votebar__btn votebar__btn--disagree\"\r\n            onClick={this.onVoteNo}\r\n            data-voted={votedDisagree}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VoteBar;\r\n","import LikeSection from './LikeSection';\r\n\r\nexport default LikeSection;\r\n","import React from 'react';\r\n\r\nimport { Votable } from '../../../../../types';\r\n\r\nimport './LikeSection.scss';\r\n\r\ntype Props = {\r\n  liked: number;\r\n  disliked: number;\r\n  rated?: Votable;\r\n  onRate: (rate: Votable) => void;\r\n};\r\n\r\nconst LikeSection = ({ liked, rated, onRate }: Props) => {\r\n  const ratedLike = rated === '+';\r\n\r\n  return (\r\n    <div className=\"likesection\">\r\n      <div\r\n        className=\"likesection__btn likesection__btn--like\"\r\n        data-liked={liked}\r\n        data-pressed={ratedLike}\r\n        onClick={() => onRate('+')}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikeSection;\r\n","import React from 'react';\r\n\r\nimport { YonApiService } from '../../../../services';\r\nimport { Votable } from '../../../../types';\r\n\r\nimport VoteBar from './VoteBar';\r\nimport LikeSection from './LikeSection';\r\n\r\nimport './Poll.scss';\r\n\r\n// TODO: Implement cool loading dummy poll component wow cool\r\n\r\ntype Props = {\r\n  poll: any;\r\n  is_auth: boolean;\r\n  voted?: Votable;\r\n  rated?: Votable;\r\n};\r\n\r\ntype State = {\r\n  voted?: Votable;\r\n  rated?: Votable;\r\n};\r\n\r\nconst getInitialState = ({ voted, rated }: Props): State => ({\r\n  voted,\r\n  rated,\r\n});\r\n\r\nclass Poll extends React.Component<Props, State> {\r\n  yonAPI = new YonApiService();\r\n\r\n  state = getInitialState(this.props);\r\n\r\n  onVote = (vote: Votable) => {\r\n    const { voted } = this.state;\r\n    const {\r\n      poll: { id },\r\n    } = this.props;\r\n\r\n    let res: string = '';\r\n\r\n    switch (voted) {\r\n      case null:\r\n        res = vote === '+' ? 'voteYes/' : 'voteNo/';\r\n        break;\r\n      case '-':\r\n        res = vote === '+' ? 'switchtoYes/' : 'unvoteNo/';\r\n        break;\r\n      case '+':\r\n        res = vote === '+' ? 'unvoteYes/' : 'switchtoNo/';\r\n        break;\r\n    }\r\n\r\n    this.setState(({ voted }) => {\r\n      rated: vote === voted ? null : vote;\r\n    });\r\n\r\n    this.yonAPI.sendData(res, { id });\r\n  };\r\n\r\n  onRate = (rate: Votable) => {\r\n    const { rated } = this.state;\r\n    const {\r\n      poll: { id },\r\n    } = this.props;\r\n\r\n    let res: string = '';\r\n\r\n    switch (rated) {\r\n      case null:\r\n        res = rate === '+' ? 'voteLike/' : 'voteDislike/';\r\n        break;\r\n      case '-':\r\n        res = rate === '+' ? 'switchtoLike/' : 'unvoteDislike/';\r\n        break;\r\n      case '+':\r\n        res = rate === '+' ? 'unvoteLike/' : 'switchtoDislike/';\r\n        break;\r\n    }\r\n\r\n    this.setState(({ rated }) => {\r\n      rated: rate === rated ? null : rate;\r\n    });\r\n\r\n    this.yonAPI.sendData(res, { id });\r\n  };\r\n\r\n  render() {\r\n    const { poll, is_auth } = this.props;\r\n    const { voted, rated } = this.state;\r\n\r\n    return (\r\n      <article className=\"poll\">\r\n        <h2 className=\"poll__name\">{poll.statement}</h2>\r\n        <div className=\"poll__votes\">\r\n          <VoteBar\r\n            agreed={poll.agree}\r\n            disagreed={poll.disagree}\r\n            voted={voted}\r\n            is_auth={is_auth}\r\n            onVote={this.onVote}\r\n          />\r\n          {is_auth && (\r\n            <LikeSection\r\n              liked={poll.likes}\r\n              disliked={poll.dislikes}\r\n              rated={rated}\r\n              onRate={this.onRate}\r\n            />\r\n          )}\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Poll;\r\n","import Poll from './Poll';\r\n\r\nexport default Poll;\r\n","import PollsView from './PollsView';\r\n\r\nexport default PollsView;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { withSpinner } from '../../hoc';\r\nimport { Poll as PollType, Votable } from '../../../types';\r\nimport { UserdataContext } from '../../../contexts';\r\n\r\nimport Poll from './Poll';\r\n\r\nimport './PollsView.scss';\r\n\r\ntype Props = {\r\n  polls: Array<PollType>;\r\n};\r\n\r\nconst PollsView = ({ polls }: Props) => {\r\n  const userdata = useContext(UserdataContext);\r\n\r\n  const votedIDs = userdata.is_auth\r\n    ? Object.keys(userdata.voted).map((val) => +val)\r\n    : [];\r\n  const ratedIDs = userdata.is_auth\r\n    ? Object.keys(userdata.rated).map((val) => +val)\r\n    : [];\r\n\r\n  const pollElements = polls.map((poll, idx) => {\r\n    const isVoted = votedIDs.includes(poll.id);\r\n    const isRated = ratedIDs.includes(poll.id);\r\n\r\n    const voteRateData = userdata.is_auth\r\n      ? {\r\n          voted: isVoted\r\n            ? ((userdata.voted[poll.id] ? '+' : '-') as Votable)\r\n            : undefined,\r\n          rated: isRated\r\n            ? ((userdata.rated[poll.id] ? '+' : '-') as Votable)\r\n            : undefined,\r\n        }\r\n      : {};\r\n\r\n    return (\r\n      <Poll\r\n        poll={poll}\r\n        key={poll.id}\r\n        is_auth={userdata.is_auth}\r\n        {...voteRateData}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"polls\">\r\n      {polls.length > 0 ? (\r\n        pollElements\r\n      ) : (\r\n        <span className=\"polls__empty-message\">Whoops! No polls here!</span>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withSpinner(PollsView);\r\n","import AppBodyHeader from './AppBodyHeader';\r\n\r\nexport default AppBodyHeader;\r\n","import React from 'react';\r\n\r\nimport './AppBodyHeader.scss';\r\n\r\n// TODO: globalize AppBodyHeader\r\n\r\ntype Props = {\r\n  label: string;\r\n};\r\n\r\nconst AppBodyHeader = ({ label }: Props) => {\r\n  return <h1 className=\"body-header\">{label}</h1>;\r\n};\r\n\r\nexport default AppBodyHeader;\r\n","import GreetingPage from './GreetingPage';\r\n\r\nexport default GreetingPage;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { User } from '../../../types';\r\n\r\nimport Button from '../../Button';\r\nimport AppBodyHeader from '../AppBodyHeader';\r\n\r\nimport './GreetingPage.scss';\r\nimport { UserdataContext } from '../../../contexts';\r\n\r\nconst GreetingPage = () => {\r\n  const userdata = useContext(UserdataContext);\r\n\r\n  const onAuthMessage = userdata.is_auth && ` (hello, ${userdata.username}!)`;\r\n\r\n  const addButton = (\r\n    <Button\r\n      label=\"+\"\r\n      style={{ margin: '0 .5rem', display: 'inline-flex', padding: 0 }}\r\n      flat\r\n    />\r\n  );\r\n\r\n  const namelessTG = (\r\n    <a href=\"https://t.me/IINamelessII\" target=\"__blank\">\r\n      @IINamelessII\r\n    </a>\r\n  );\r\n\r\n  const yugisuTG = (\r\n    <a href=\"https://t.me/inokentich\" target=\"__blank\">\r\n      @inokentich\r\n    </a>\r\n  );\r\n\r\n  return (\r\n    <div className=\"greeting-page\">\r\n      <AppBodyHeader label=\"Welcome to YesOrNo alpha v0.666!\" />\r\n      <div className=\"greeting-page__content\">\r\n        <p>\r\n          Each alpha-tester {onAuthMessage} is recommended to register / sign in\r\n          and {addButton} at least 5 polls distributed among any flows and also\r\n          vote in polls created by other users.\r\n        </p>\r\n        <p>\r\n          To start voting choose Flow or just push \"Random!\" button in left\r\n          column. To add a Poll sign in and press + in left column.\r\n        </p>\r\n        <p>\r\n          Report problems found to\r\n          <span className=\"text--accent\"> theyesornoproject@gmail.com</span> or\r\n          to us in Telegram: {namelessTG}, {yugisuTG}.\r\n        </p>\r\n        <p>Have a nice time! With best wishes, IINamelessII & yugisu.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GreetingPage;\r\n","import AppBody from './AppBody';\r\n\r\nexport default AppBody;\r\n","import React from 'react';\r\n\r\nimport { YonApiService } from '../../services';\r\nimport { Poll, User } from '../../types';\r\n\r\nimport PollsView from './PollsView';\r\nimport GreetingPage from './GreetingPage';\r\nimport AppBodyHeader from './AppBodyHeader';\r\n\r\nimport './AppBody.scss';\r\n\r\ntype Props = {\r\n  selectedFlow: string | null;\r\n  userdata: User;\r\n};\r\n\r\ntype State = {\r\n  polls: Poll[];\r\n  pollsLoading: boolean;\r\n};\r\n\r\nclass AppBody extends React.Component<Props, State> {\r\n  yonApi = new YonApiService();\r\n\r\n  state = {\r\n    polls: [],\r\n    pollsLoading: true,\r\n  };\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.selectedFlow !== prevProps.selectedFlow) {\r\n      this.updatePolls();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updatePolls();\r\n  }\r\n\r\n  onPollsUpdated = (polls: Poll[]) => {\r\n    this.setState({ polls, pollsLoading: false });\r\n  };\r\n\r\n  updatePolls = () => {\r\n    if (this.props.selectedFlow) {\r\n      this.setState({ polls: [], pollsLoading: true }, () => {\r\n        this.yonApi\r\n          .getPollsByFlow(this.props.selectedFlow as string)\r\n          .then(this.onPollsUpdated);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { polls, pollsLoading } = this.state as State;\r\n    const { selectedFlow } = this.props as Props;\r\n\r\n    const contentView =\r\n      selectedFlow !== null ? (\r\n        <>\r\n          <AppBodyHeader label={selectedFlow} />\r\n          <PollsView loading={pollsLoading} polls={polls} />\r\n        </>\r\n      ) : (\r\n        <GreetingPage />\r\n      );\r\n\r\n    return <div className=\"app-body\">{contentView}</div>;\r\n  }\r\n}\r\n\r\nexport default AppBody;\r\n","import React from 'react';\r\n\r\nimport { YonApiService } from '../../services';\r\nimport { Flow, User } from '../../types';\r\nimport { UserdataContext, ProfileUpdateContext } from '../../contexts';\r\n\r\nimport Header from '../Header';\r\nimport SideMenu from '../SideMenu';\r\nimport AppBody from '../AppBody';\r\n\r\nimport './App.scss';\r\n\r\n// TODO: implement cool loading animation\r\n\r\n// in case of no internet connection\r\n// #region\r\nconst pollId = ((counter = 0) => () => counter++)();\r\nconst flowId = ((counter = 0) => () => counter++)();\r\n\r\n// eslint-disable-next-line\r\nconst pollsMy = [\r\n  {\r\n    id: pollId(),\r\n    flow: 'Ukraine',\r\n    statement: 'Україна це залупа?',\r\n    agree: 2,\r\n    disagree: 1,\r\n    likes: 10,\r\n    dislikes: 5,\r\n  },\r\n  {\r\n    id: pollId(),\r\n    flow: 'Science',\r\n    statement: 'Do you like VT?',\r\n    agree: 5,\r\n    disagree: 1,\r\n    likes: 10,\r\n    dislikes: 5,\r\n  },\r\n  {\r\n    id: pollId(),\r\n    flow: 'Science',\r\n    statement: 'Mnogonozhka?',\r\n    agree: 0,\r\n    disagree: 0,\r\n    likes: 0,\r\n    dislikes: 0,\r\n  },\r\n];\r\n// eslint-disable-next-line\r\nconst flowsMy = [\r\n  { id: flowId(), name: 'Ukraine' },\r\n  { id: flowId(), name: 'Bikes' },\r\n  { id: flowId(), name: 'Anime' },\r\n  { id: flowId(), name: 'Politics' },\r\n  { id: flowId(), name: 'Science' },\r\n  { id: flowId(), name: 'Sport' },\r\n  { id: flowId(), name: 'Health' },\r\n  { id: flowId(), name: 'Videogames' },\r\n];\r\n// #endregion\r\n\r\ntype State = {\r\n  selectedFlow: string | null;\r\n  userdata: User;\r\n};\r\n\r\nclass App extends React.Component<{}, State> {\r\n  yonApi = new YonApiService();\r\n\r\n  state: State = {\r\n    selectedFlow: null,\r\n    userdata: {\r\n      is_auth: false,\r\n    },\r\n    // userdata: {\r\n    //   is_auth: true,\r\n    //   username: 'BANANAN_CHIK',\r\n    //   voted: { 0: true, 5: true, 6: true, 7: false, 8: false, 10: false },\r\n    //   rated: { 0: true, 5: true, 6: true, 7: false, 8: false, 10: false },\r\n    // },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateProfile();\r\n  }\r\n\r\n  updateProfile = () => {\r\n    this.yonApi\r\n      .getUserdata()\r\n      .then((userdata) =>\r\n        this.setState({ userdata }, () => console.log(this.state.userdata))\r\n      );\r\n  };\r\n\r\n  handleSelectFlow = (flowName: string) => {\r\n    this.setState({ selectedFlow: flowName });\r\n  };\r\n\r\n  render() {\r\n    const { selectedFlow, userdata } = this.state;\r\n\r\n    const flowsProps = {\r\n      selectedFlow,\r\n      handleSelectFlow: this.handleSelectFlow,\r\n    };\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <UserdataContext.Provider value={userdata}>\r\n          <ProfileUpdateContext.Provider value={this.updateProfile}>\r\n            <Header />\r\n          </ProfileUpdateContext.Provider>\r\n\r\n          <SideMenu flowsProps={flowsProps} loggedIn={userdata.is_auth} />\r\n\r\n          <AppBody selectedFlow={selectedFlow} userdata={userdata} />\r\n        </UserdataContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}